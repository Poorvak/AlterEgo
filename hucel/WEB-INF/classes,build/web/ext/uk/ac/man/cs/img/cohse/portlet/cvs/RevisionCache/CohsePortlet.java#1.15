/*
 * CohsePortlet.java
 *
 * Created on 10 April 2005, 15:54
 */

package uk.ac.man.cs.img.cohse.portlet;

//IO
import java.io.IOException;
import java.io.Writer;

//Util
import java.util.Enumeration;
import java.util.HashSet;
import java.util.ArrayList;
import java.util.List;
import java.util.Iterator;

//Net
import java.net.URL;
import java.net.URLEncoder;

//Portlet
import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import javax.portlet.GenericPortlet;
import javax.portlet.PortletException;
import javax.portlet.PortletRequest;
import javax.portlet.RenderRequest;
import javax.portlet.RenderResponse;
import javax.portlet.PortletURL;
import javax.portlet.PortletContext;
import javax.portlet.PortletException;
import javax.portlet.PortletRequestDispatcher;
import javax.portlet.PortletMode;
import javax.portlet.PortletPreferences;
import javax.portlet.PortletSession;
import javax.portlet.ValidatorException;
import javax.portlet.PortletURL;
import javax.portlet.PortletRequestDispatcher;

import uk.ac.man.cs.img.cohse.utils.KnowledgeServiceUtil;
import uk.ac.man.cs.img.cohse.utils.ASUtil;

import uk.ac.man.cs.img.cohse.roles.DefaultRole;

import uk.ac.man.cs.img.cohse.roles.ITManagerRole;
import uk.ac.man.cs.img.cohse.roles.ProjectManagerRole;
import uk.ac.man.cs.img.cohse.roles.RoleUtil;

//This is the Liferay class to acces the users role
import com.liferay.portal.service.spring.RoleServiceUtil;
import com.liferay.portal.model.Role;

/**
 * Main portlet class that conforms to the JSR 168 specification. This portlet displays a Web page in a separate window by using the given user preferences.
 *
 * @author  Yeliz Yesilada
 * @version $Revision: 1.15 $
 *
 */
public class CohsePortlet extends GenericPortlet {    
    
    //These will be used to transfer and check preferences between the doEdit and processAction methods.
    String ont;
    String antSrv;
    String ontSrv;
    String linkingType;
    String linkEmbelTech;
    String linkBoxTech;
    String[] ASComp;
    String uniqueConcepts;
    String sourceInfo;
    DefaultRole dRole = new DefaultRole();

    ITManagerRole itRole = new ITManagerRole();
    ProjectManagerRole pRole = new ProjectManagerRole();
    
    //This will be used to check which button triggers the processAction method
    boolean check_save = false;
    
    //This will be used to transfer the message for the ontology loading process
    String message = null;
    
    //Contextual URL to this service
    String resourceURL = null;
    
    //Tab configuration parameter, that keeps track of the active tab and tab body
    String tab_conf = "resourcesTab";
    /**
     *When the portlet is loaded this method will be called.
     *@param request A RenderRequest object
     *@param response A RenderResponse object
     **/
    protected void doView(RenderRequest request, RenderResponse response) throws PortletException, IOException {
        try {
            response.setContentType("text/html");
            StringBuffer sb = new StringBuffer();
            
            //Get portlet preferences object
            PortletPreferences prefs = request.getPreferences();
            
            //Get the preferences values from the persistent store by using the prefs
            
            if(RoleUtil.isUserInRole(request.getRemoteUser(), pRole.getRoleName())){
                ont = prefs.getValue("ont", pRole.getOntology());
                linkEmbelTech = prefs.getValue("link-embel-tech", pRole.getLinkEmbelTech());
                ASComp = prefs.getValues("ASComp", pRole.getAnnotationServiceComp());
                sourceInfo = prefs.getValue("sourceInfo",pRole.getSourceInfo());
                antSrv = prefs.getValue("antSrv", pRole.getAnnotationService());
                ontSrv = prefs.getValue("ontSrv", pRole.getOntologyService());
                linkingType = prefs.getValue("linking-type", pRole.getLinkingType());
                linkBoxTech = prefs.getValue("link-box-tech", pRole.getLinkEmbelTech());
                uniqueConcepts = prefs.getValue("uniqueConcepts", pRole.getUniqueConcepts());
                
            }else if(RoleUtil.isUserInRole(request.getRemoteUser(),itRole.getRoleName())){
                ont = prefs.getValue("ont", itRole.getOntology());
                linkEmbelTech = prefs.getValue("link-embel-tech", itRole.getLinkEmbelTech());
                ASComp = prefs.getValues("ASComp", itRole.getAnnotationServiceComp());
                sourceInfo = prefs.getValue("sourceInfo", itRole.getSourceInfo());
                antSrv = prefs.getValue("antSrv", itRole.getAnnotationService());
                ontSrv = prefs.getValue("ontSrv", itRole.getOntologyService());
                linkingType = prefs.getValue("linking-type", itRole.getLinkingType());
                linkBoxTech = prefs.getValue("link-box-tech", itRole.getLinkEmbelTech());
                uniqueConcepts = prefs.getValue("uniqueConcepts", itRole.getUniqueConcepts());
                
            } else{
                ont = prefs.getValue("ont", dRole.getOntology());
                linkEmbelTech = prefs.getValue("link-embel-tech", dRole.getLinkEmbelTech());
                ASComp = prefs.getValues("ASComp", dRole.getAnnotationServiceComp());
                sourceInfo = prefs.getValue("sourceInfo", dRole.getSourceInfo());
                antSrv = prefs.getValue("antSrv", dRole.getAnnotationService());
                ontSrv = prefs.getValue("ontSrv", dRole.getOntologyService());
                linkingType = prefs.getValue("linking-type", dRole.getLinkingType());
                linkBoxTech = prefs.getValue("link-box-tech", dRole.getLinkEmbelTech());
                uniqueConcepts = prefs.getValue("uniqueConcepts", dRole.getUniqueConcepts());
                
            }
            
            if (request.getServerPort() > -1) {
                resourceURL = "http://" + request.getServerName() + ":" + request.getServerPort() + request.getContextPath();
                
            } else {
                resourceURL = "http://" + request.getServerName() + request.getContextPath();
            } 
            
            sb.append("<script type=\"text/javascript\" src=\""+resourceURL+"/resources/combo.js\"");
            sb.append(" language=\"javascript1.2\"> </script>");
            //Set this to false so that we will get the stored preferences
            check_save = false;
            sb.append("<div style=\"font-size:medium;margin-left:5%;margin-right:5%;text-align:left;font-family:tahoma, arial, helvetica, sans-serif;\">");

            String kainProxy = request.getContextPath()+"/kain/";
            sb.append("<form method=\"get\" name=\"getform\"");
            sb.append("onsubmit=\"window.open('"+kainProxy+"'+window.document.getform.theurl.value);\">");
           
            sb.append("<div style=\"padding:10px;border-bottom: solid 1px #ddd;\">");
            
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("URL: ");
            sb.append("</span>");
            //* sb.append("<input style=\"margin-top:3px;margin-right:8px;margin-left:5px;width:70%\"");
            //src will be used to get the URL of the page to load
            //* sb.append("name=\"theurl\"");            
            //* sb.append("type=\"text\" value=\""+theurl+"\" size=\"80\">");
            //sb.append(" onkeypress=\"if(event.keyCode == 13){window.open('"+kainProxy+"'+window.document.getform.theurl.value);}\">");
            sb.append("<SELECT name=\"myCombo\" onChange=\"this.form.theurl.value = this.options[this.selectedIndex].text;\"");
            sb.append(" style=\"position:absolute;margin-top:3px;margin-left:5px;z-index:- 1;width:62%;clip:rect(0px,62%, 22px, 60%);\">"); 
            sb.append("<OPTION value=\"http://www.sun.com/servers/midrange/v490/index.jsp\">http://www.sun.com/servers/midrange/v490/index.jsp");
	    sb.append("</OPTION>");
            sb.append("<OPTION value=\"http://sunsolve.sun.com/\">http://sunsolve.sun.com/");
            sb.append("</OPTION>");
            sb.append("<OPTION value=\"http://java.sun.com/\">http://java.sun.com/");
            sb.append("</OPTION>");
            sb.append("<OPTION value=\"http://developers.sun.com/\">http://developers.sun.com/");
            sb.append("</OPTION>");
            sb.append("<OPTION value=\"http://www.sun.com/\">http://www.sun.com/");
            sb.append("</OPTION>");
            sb.append("</SELECT>");
            sb.append("<INPUT type=\"text\" name=\"theurl\"");
            sb.append(" style=\"position:absolute;margin-top:3px;margin-left:5px;z-index:1000;width:60%;\"");
            sb.append(" onChange=\"addOption()\""); 
            sb.append(" value=\"http://www.sun.com/servers/midrange/v490/index.jsp\">");
            sb.append("<input style=\"position:relative;margin-left:75%\" type=\"button\" value=\"Go\" onclick=\"window.open('"+kainProxy+"'+window.document.getform.theurl.value);\">");
            sb.append("</div>");
            
            sb.append("</form>");   
     
             if(RoleUtil.isUserInRole(request.getRemoteUser(), pRole.getRoleName())){
                sb.append("<div style=\"padding:10px;font-size:12px;\">");
                sb.append("<span style=\"font-weight:bold;font-size:14px;padding-bottom:10px;\">");
                sb.append("You are a Project Manager!");               
                sb.append("</span><br/>");
            }
            else if(RoleUtil.isUserInRole(request.getRemoteUser(), itRole.getRoleName())){
                sb.append("<div style=\"padding:10px;font-size:12px;\">");
                sb.append("<span style=\"font-weight:bold;font-size:14px;padding-bottom:10px;\">");
                sb.append("You are an IT Manager!");                
                sb.append("</span><br/>");
            }
            
            sb.append("<div style=\"padding:10px;font-size:12px;\">");
            sb.append("<span style=\"font-weight:bold;font-size:14px;padding-bottom:10px;\">");
            sb.append("Your Preferences:");
            sb.append("</span><br/>");
            
            //ont is used to hold the ontology URL
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Ontology URI: ");
            sb.append("</span>");
            sb.append(ont);
            sb.append("<br/>");           
     
            //antSrv stands for Annotation Service
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Resource Service: ");
            sb.append("</span>");            
            sb.append(antSrv);
            sb.append("<br/>");
            
            //ASComp is used to maintain the Annotation Service Components
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Resource Service Components: ");
            sb.append("</span>");
            String ASCompSession = "";
            if(ASComp.length<1)
                sb.append("No component is selected...");
            else{
                for(int i=0;i<ASComp.length;i++){
                    if(i==ASComp.length-1)
                        ASCompSession+=ASComp[i];
                    else
                        ASCompSession+=ASComp[i]+",";
                }//for
                sb.append(ASCompSession);
            }//else
            sb.append("<br/>");           
            
            //ontSrv stands for Ontology Service
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Ontology Service: ");
            sb.append("</span>");
            sb.append(ontSrv);
            sb.append("<br/>"); 
                        
            //LinkingType
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Linking Type: ");
            sb.append("</span>");
            if(linkingType.equals("1"))
                sb.append("generic linking");
            else if(linkingType.equals("2"))
                sb.append("annotation linking");
            sb.append("<br/>");
            
            //LinkingType
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Link Embellishment technique: ");
            sb.append("</span>");
            sb.append(linkEmbelTech);           
            sb.append("<br/>");
            
            //LinkBox presentation technique
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Link Box Presentation technique: ");
            sb.append("</span>");
            sb.append(linkBoxTech);           
            sb.append("<br/>");
            
            //UniqueTerms
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Unique Concepts: ");
            sb.append("</span>");
            sb.append(uniqueConcepts);           
            sb.append("<br/>");
            
            //SourceInfo
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Information about the source: ");
            sb.append("</span>");
            sb.append(sourceInfo);           
            sb.append("<br/>");
            
            sb.append("</div>");
            String[] actives =
                ASCompSession.split(",");
            /*for (int i=0; i< actives.length; i++) {
                System.out.println("Component "+i+" and its name is: "+actives[i]);
            }*/
            
            PortletSession session = request.getPortletSession(true);
            session.setAttribute("ont",ont, PortletSession.APPLICATION_SCOPE);
            session.setAttribute("antSrv",antSrv, PortletSession.APPLICATION_SCOPE);
            session.setAttribute("ontSrv",ontSrv, PortletSession.APPLICATION_SCOPE);
            session.setAttribute("linkingType",linkingType,PortletSession.APPLICATION_SCOPE);
            session.setAttribute("linkEmbelTech",linkEmbelTech,PortletSession.APPLICATION_SCOPE);
            session.setAttribute("linkBoxTech",linkBoxTech,PortletSession.APPLICATION_SCOPE);
            session.setAttribute("ASComp",ASCompSession,PortletSession.APPLICATION_SCOPE);
            session.setAttribute("uniqueConcepts",uniqueConcepts,PortletSession.APPLICATION_SCOPE);
            session.setAttribute("sourceInfo",sourceInfo,PortletSession.APPLICATION_SCOPE);
                       
            //Display the form to load the page
            response.getWriter().print(sb.toString());      
        }//try
        catch (Exception e) {
            throw new PortletException(e);
        }//catch
    }//doView    
    
    /**
     *When a user requests help then this method will be called.
     *@param request A RenderRequest object
     *@param response A RenderResponse object
     **/
    protected void doHelp(RenderRequest request, RenderResponse response) throws PortletException, IOException {
        try{
            //return a helpful message
            response.setContentType("text/html");
            StringBuffer sb = new StringBuffer();
            
            sb.append("<div style=\"font-size:11pt;text-align:left;margin-left:5%;margin-right:5%;font-family:tahoma,arial,helvetica,sans-serif;\">");
            sb.append("<p style=\"padding-left:5px;\">");
            sb.append("This portlet can be used to browse pages that are decorated by the extra <a href=\"http://cohse.man.ac.uk/\">COHSE</a> links. These extra links are added by using the services that are specified in the preferences. Therefore before you use this portlet make sure that you set the preferences appropriately.");
            sb.append("The following preferences will be used:");
            sb.append("<ul style=\"list-style-type:none;\">");
            sb.append("<li><span style=\"font-weight:bold;\">Resource service</span>: specify the annotation service URL.</li>");
            sb.append("<li><span style=\"font-weight:bold;\">Ontology service</span>: specify the ontology service URL.</li>");
            sb.append("<li><span style=\"font-weight:bold;\">Ontology</span>: specify the ontology URL.</li>");
            sb.append("<li><span style=\"font-weight:bold;\">Linking type</span>: specify whether generic or annotation linking will be done.</li>");
            sb.append("<li><span style=\"font-weight:bold;\">Link embelishment technique</span>: specify how added cohse links will be visualised.</li>");
            sb.append("<li><span style=\"font-weight:bold;\">Unique concepts</span>: specify if concepts will be identified only once.</li>");
            sb.append("<li><span style=\"font-weight:bold;\">Resource service component</span>: specify which annotation service components will be used.</li>");
            sb.append("</ul>");
            sb.append("</p>");
            sb.append("</div>");
            
            response.getWriter().print(sb.toString());
        }//try
        catch (Exception e) {
            throw new PortletException(e);
        }//catch
    }//doHelp
    
    /**
     *When portlet preferences will be edited this method will be accessed.
     *@param request A RenderRequest object
     *@param response A RenderResponse object
     **/
    protected void doEdit(RenderRequest request, RenderResponse response) throws PortletException, IOException {
        try{
            response.setContentType("text/html");
           
            //This is used to check if there is an error in the validated preferences
            String errorMsg = request.getParameter("error");
            
            if(check_save==false){
                PortletPreferences prefs = request.getPreferences();
                
                //Get the preferences values from the persistent store by using the prefs
               
                if(RoleUtil.isUserInRole(request.getRemoteUser(), pRole.getRoleName())){
                    ont = prefs.getValue("ont", pRole.getOntology());
                    linkEmbelTech = prefs.getValue("link-embel-tech", pRole.getLinkEmbelTech());
                    ASComp = prefs.getValues("ASComp", pRole.getAnnotationServiceComp());
                    sourceInfo = prefs.getValue("sourceInfo",pRole.getSourceInfo());
                    antSrv = prefs.getValue("antSrv", pRole.getAnnotationService());
                    ontSrv = prefs.getValue("ontSrv", pRole.getOntologyService());
                    linkingType = prefs.getValue("linking-type", pRole.getLinkingType());
                    linkBoxTech = prefs.getValue("link-box-tech", pRole.getLinkEmbelTech());
                    uniqueConcepts = prefs.getValue("uniqueConcepts", pRole.getUniqueConcepts());
                    
                }else if(RoleUtil.isUserInRole(request.getRemoteUser(),itRole.getRoleName())){
                    ont = prefs.getValue("ont", itRole.getOntology());
                    linkEmbelTech = prefs.getValue("link-embel-tech", itRole.getLinkEmbelTech());
                    ASComp = prefs.getValues("ASComp", itRole.getAnnotationServiceComp());
                    sourceInfo = prefs.getValue("sourceInfo", itRole.getSourceInfo());
                    antSrv = prefs.getValue("antSrv", itRole.getAnnotationService());
                    ontSrv = prefs.getValue("ontSrv", itRole.getOntologyService());
                    linkingType = prefs.getValue("linking-type", itRole.getLinkingType());
                    linkBoxTech = prefs.getValue("link-box-tech", itRole.getLinkEmbelTech());
                    uniqueConcepts = prefs.getValue("uniqueConcepts", itRole.getUniqueConcepts());
                    
                } else{
                    ont = prefs.getValue("ont", dRole.getOntology());
                    linkEmbelTech = prefs.getValue("link-embel-tech", dRole.getLinkEmbelTech());
                    ASComp = prefs.getValues("ASComp", dRole.getAnnotationServiceComp());
                    sourceInfo = prefs.getValue("sourceInfo", dRole.getSourceInfo());
                    antSrv = prefs.getValue("antSrv", dRole.getAnnotationService());
                    ontSrv = prefs.getValue("ontSrv", dRole.getOntologyService());
                    linkingType = prefs.getValue("linking-type", dRole.getLinkingType());
                    linkBoxTech = prefs.getValue("link-box-tech", dRole.getLinkEmbelTech());
                    uniqueConcepts = prefs.getValue("uniqueConcepts", dRole.getUniqueConcepts());
                    
                }
                
            }
            //Get the URL to point back to the portlet
            PortletURL url = response.createActionURL();           
            StringBuffer sb = new StringBuffer();
            
            //CSS file that includes presentation details of the portlet is available at
            //http://*serverURL*/cohse/resources/cohse.css
            String cssFileLocation = "";
            if (request.getServerPort() > -1) {
                cssFileLocation = "http://" + request.getServerName() + ":" + request.getServerPort() + request.getContextPath() +"/resources/cohse.css";
            } else {
                cssFileLocation = "http://" + request.getServerName() + request.getContextPath() + "/resources/cohse.css";
            }
            
            //System.out.println("Portlet - CSS file located at: "+cssFileLocation);
           
            //First we will add the necessary javascript to access the CSS stylesheet
            sb.append("<script type=\"text/javascript\">");
            sb.append("if(document.createStyleSheet) {");
            sb.append("document.createStyleSheet('"+cssFileLocation+"');");
            sb.append("}");
            sb.append("else {");    
            sb.append("var styles = \"@import url('"+cssFileLocation+"');\";");
            sb.append("var newSS=document.createElement('link');");
            sb.append("newSS.rel='stylesheet';");
            sb.append("newSS.href='data:text/css,'+escape(styles);");
            sb.append("document.getElementsByTagName(\"head\")[0].appendChild(newSS);");
            sb.append("}");
            sb.append("</script>");
            
            /***Add the javascript necessary to activate tabs***/
            sb.append("<script type=\"text/javascript\" src=\""+resourceURL+"/resources/combo.js\"");
            sb.append(" language=\"javascript1.2\"> </script>");
            
            /***Begin Tab List***/
            sb.append("<div id=\"tabContainer\">");
	    sb.append("<div id=\"resourcesTab\" class=\"tabUnselected\" onclick=\"javascript:showTab(this);\">Resource</div>");
            sb.append("<div id=\"ontologyTab\" class=\"tabUnselected\" onclick=\"javascript:showTab(this);\">Ontology</div>");
            sb.append("<div id=\"visualisationTab\" class=\"tabUnselected\" onclick=\"javascript:showTab(this);\">Visualisation</div>");
            sb.append("</div>");
            /****End Tab List***/
            
            
            //Script necessary for the current tab
            sb.append("<script type=\"text/javascript\">");
            if(tab_conf.equals("ontologyTab")){
                sb.append("currentTab = document.getElementById('ontologyTab');");                
            }
            else if(tab_conf.equals("visualisationTab")){                
                sb.append("currentTab = document.getElementById('visualisationTab');");
            }
            else{                
                sb.append("currentTab = document.getElementById('resourcesTab');");
            }
            sb.append("currentTab.className = \"tabSelected\"");
            sb.append("</script>");
            
            //Then this will be the code for the portlet
            //This will be the main div block
            /***Begin Tab body**/
            sb.append("<div id=\"tabBody\" style=\"font-size:14px;margin-left:5%;margin-right:5%;text-align:left;font-family:tahoma,arial,helvetica, sans-serif;\">");
            sb.append("<form action=\"" + url + "\" ");
            sb.append("method=\"post\" name=\"" + response.getNamespace() + "fm");
            sb.append("\" onSubmit=\"submitForm(this); return false;\">");
            
            //This is used for the tab management           
            sb.append("<input type=HIDDEN id=\"tab\" name=\"tab\" value=\"\">");
          
            if(errorMsg!=null){
                sb.append("<div style=\"padding-top:5px;padding-bottom:5px;color: #FF0000;\">");
                sb.append("ERROR: "+errorMsg);
                sb.append("</div>");   
            }      

            /***Begin Resources Tab***/
            if(tab_conf.equals("resourcesTab")){
                sb.append("<div id=\"resourcesTabBody\">");
            }
            else{
                sb.append("<div id=\"resourcesTabBody\" style=\"display:none\">");
            }
            //Getting antSrv value: Antsrv stands for AnnotationService
            sb.append("<div style=\"padding:10px;\">");
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Resource Service");
            sb.append("</span><br/>");
            sb.append("<input style=\"margin-top:3px;margin-right:5px;width:70%\"");            
            sb.append("name=\"antSrv\"");
            sb.append("type=\"text\" value=\"");
            sb.append(antSrv+ "\">");            
            //sb.append("<input type=\"submit\" name=\"update-as\" value=\"get-components\">");
            sb.append("<input type=HIDDEN name=\"get_comps\" value=\"\">");
            sb.append("<input type=SUBMIT name=\"get-components\" value=\"get-components\" onClick=\"get_comps.value='true';\" >");
            sb.append("</div>");
            
            ASUtil asUtil = new ASUtil(antSrv); //create an annotation Service utility instance by just passing a dummy string array for the component names
            String[] components = asUtil.getAllComponents();  
            
            //Annotation Service Components
            sb.append("<div style=\"padding:10px;\">");
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Resource Service Components");
            sb.append("</span><br/>");  
            
            if(components==null){
                sb.append("<span style=\"padding-top:5px;color: #FF0000;\"> Resource Service cannot be accessed!</span>");     
            }//if
            else if(components.length<1){
                sb.append("<span style=\"padding-top:5px;color: #FF0000;\"> Resource Service does not have READY components!</span>");             
            }//else if
            else{
                HashSet selectedComponentNames = new HashSet();
                //create a HashSet with the components that were selected before from the preferences
                for (int i=0; i< ASComp.length; i++) {
                    selectedComponentNames.add( ASComp[i] );
                }//for
                //Get the components from the given annotation service and then display them based on the previous user prefere
                for(int j=0; j<components.length; j++){                    
                    if(selectedComponentNames.contains((String) components[j])){
                        sb.append("<input type=\"checkbox\" checked name=\"ASCompCheckbox\" value=\""+components[j]+"\">"+components[j]+" service</br>");
                    }//if
                    else{
                        sb.append("<input type=\"checkbox\" name=\"ASCompCheckbox\" value=\""+components[j]+"\">"+components[j]+" service</br>");
                    }//else
                }//for
            }//else
            
            sb.append("</div>");   
            sb.append("</div>");
            /***End Resources tab***/

            /***Begin Ontology tab***/ 
            if(tab_conf.equals("ontologyTab")){
                sb.append("<div id=\"ontologyTabBody\">");
            }
            else{
                sb.append("<div id=\"ontologyTabBody\" style=\"display:none\">");
            }
            //Getting ontSrv value: ontSrv stands for ontologyService
            sb.append("<div style=\"padding:10px;\">");
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Ontology Service");
            sb.append("</span><br/>");
            sb.append("<input style=\"margin-top:3px;margin-right:5px;width:70%\"");            
            sb.append("name=\"ontSrv\"");
            sb.append("type=\"text\" value=\"");
            sb.append(ontSrv+ "\">");
            sb.append("<input type=HIDDEN name=\"add_onts\" value=\"\">");
            //sb.append("<input type=\"submit\" name=\"update-os\" value=\"get-ontologies\">");
            sb.append("<input type=SUBMIT name=\"get-ontologies\" value=\"get-ontologies\" onClick=\"add_onts.value='true';\" >");
            sb.append("</div>");   
            
            
            KnowledgeServiceUtil osUtil = new KnowledgeServiceUtil(ontSrv,true);
            String ontologies[] = osUtil.getAllKnowledgeSources();
            
            //Getting ont value
            sb.append("<div style=\"padding:10px;\">");
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Ontology List");
            sb.append("</span><br/>");
            if(ontologies==null){
                sb.append("<span style=\"padding-top:5px;color: #FF0000;\"> Ontology service cannot be accessed!</span>");     
            }//if
            else if(ontologies.length<1){
                sb.append("<span style=\"padding-top:5px;color: #FF0000;\"> Ontology service does not serve any ontologies!</span>");             
            }//else if
            else{
                sb.append("<select style=\"margin-top:3px;margin-right:5px;\" name=\"ont\">");            
                for(int i=0;i<ontologies.length;i++){
                    if(ont.equals(ontologies[i]))
                        sb.append("<option selected value=\""+ontologies[i]+"\">"+ontologies[i]+"</option>");
                    else
                        sb.append("<option value=\""+ontologies[i]+"\">"+ontologies[i]+"</option>");                    
                }//for
                sb.append("</select>"); 
            }
            sb.append("</div>");         
            
             //Getting ontSrv value: ontSrv stands for ontologyService
            sb.append("<div style=\"padding:10px;\">");
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Load Ontology</span>");
            sb.append("<span style=\"font-size:10px;\"> (Enter the ontology URL below and press load-ontology)</span>");
            sb.append("<br/>");
            sb.append("<input style=\"margin-top:3px;margin-right:5px;width:70%\"");            
            sb.append("name=\"load_ontology\"");
            sb.append("type=\"text\" value=\"\">");
            sb.append("<input type=HIDDEN name=\"load_ont\" value=\"\">");
            //sb.append("<input type=\"submit\" name=\"update-os\" value=\"get-ontologies\">");
            sb.append("<input type=SUBMIT name=\"load_ontology_submit\" value=\"load-ontology\" onClick=\"load_ont.value='true';\" >");
            if(message!=null){
                sb.append("<span style=\"font-size:12px;color:red;\">"+message+"</span>");
                message = null;
            }
            sb.append("</div>");
            sb.append("</div>");
            /***End Ontology Tab***/
            
            
            /***Begin visualisation tab***/
            if(tab_conf.equals("visualisationTab")){
                sb.append("<div id=\"visualisationTabBody\">");
            }
            else{
                sb.append("<div id=\"visualisationTabBody\" style=\"display:none\">");
            }
            sb.append("<div style=\"padding:10px;\">");
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Linking Type");
            sb.append("</span><br/>");
            sb.append("<select style=\"margin-top:3px;margin-right:5px;\" name=\"linking-type\">"); 
                if(linkingType.equals("1")){
                    sb.append("<option value=\"1\" selected> Generic linking</option>");
                    sb.append("<option value=\"2\"> Annotation linking</option>");
                }//if
                else{
                    sb.append("<option value=\"1\" > Generic linking</option>");
                    sb.append("<option value=\"2\" selected> Annotation linking</option>");
                }
            sb.append("</select>");            
            sb.append("</div>");
            
             //UniqueConcepts
            sb.append("<div style=\"padding:10px;\">");
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Unique concepts");
            sb.append("</span><br/>"); 
                if(uniqueConcepts.equals("true")){
                    sb.append("<input type=\"checkbox\" checked name=\"uniqueConcepts\" value=\"true\"\">Make linking unique per concept</br>");   
                }//if
                else{
                    sb.append("<input type=\"checkbox\" name=\"uniqueConcepts\" value=\"true\"\">Make linking unique per concept</br>");        
                }
            sb.append("</select>");            
            sb.append("</div>");
            
             //sourceInfo
            sb.append("<div style=\"padding:10px;\">");
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Source Information");
            sb.append("</span><br/>"); 
                if(sourceInfo.equals("true")){
                    sb.append("<input type=\"checkbox\" checked name=\"sourceInfo\" value=\"true\"\">Display information about the source of the suggested resources</br>");   
                }//if
                else{
                    sb.append("<input type=\"checkbox\" name=\"sourceInfo\" value=\"true\"\">Display information about the source of the suggested resources</br>");        
                }
            sb.append("</select>");            
            sb.append("</div>");
            
            
            //Linking embelishment technique
            sb.append("<div style=\"padding:10px;\">");
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Link Embelishment Technique");
            sb.append("</span><br/>");
            
            if(linkEmbelTech.equals("icon")){
                sb.append("<input type=\"radio\" checked name=\"link-embel-tech\" value=\"icon\"> Icon (cohse-link<img src=\"http://cohse.man.ac.uk/resources/info.gif\"/>)</br>");
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"overlay\"> Overlay (<span class=\"overlay\">cohse-link</span>)</br>");
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"greybox\"> Grey box (<span class=\"greybox-portlet\">cohse-link</span>)</br>");     
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"redunderline\"> Red underline (<span class=\"redunderline\">cohse-link</span>)</br>");     
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"blueunderline\"> Blue underline (<span class=\"blueunderline\">cohse-link</span>)</br>");     
            }//if
            else if(linkEmbelTech.equals("overlay")){
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"icon\"> Icon (cohse-link<img src=\"http://cohse.man.ac.uk/resources/info.gif\"/>)</br>");
                sb.append("<input type=\"radio\" checked name=\"link-embel-tech\" value=\"overlay\"> Overlay (<span class=\"overlay\">cohse-link</span>)</br>");
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"greybox\"> Grey box (<span class=\"greybox-portlet\">cohse-link</span>)</br>");     
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"redunderline\"> Red underline (<span class=\"redunderline\">cohse-link</span>)</br>");     
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"blueunderline\"> Blue underline (<span class=\"blueunderline\">cohse-link</span>)</br>");     
            }//else if  
            else if(linkEmbelTech.equals("greybox")){
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"icon\"> Icon (cohse-link<img src=\"http://cohse.man.ac.uk/resources/info.gif\"/>)</br>");
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"overlay\"> Overlay (<span class=\"overlay\">cohse-link</span>)</br>");
                sb.append("<input type=\"radio\" checked name=\"link-embel-tech\" value=\"greybox\"> Grey box (<span class=\"greybox-portlet\">cohse-link</span>)</br>");     
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"redunderline\"> Red underline (<span class=\"redunderline\">cohse-link</span>)</br>");     
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"blueunderline\"> Blue underline (<span class=\"blueunderline\">cohse-link</span>)</br>");     
            }//else if
            else if(linkEmbelTech.equals("redunderline")){
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"icon\"> Icon (cohse-link<img src=\"http://cohse.man.ac.uk/resources/info.gif\"/>)</br>");
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"overlay\"> Overlay (<span class=\"overlay\">cohse-link</span>)</br>");
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"greybox\"> Grey box (<span class=\"greybox-portlet\">cohse-link</span>)</br>");     
                sb.append("<input type=\"radio\" checked name=\"link-embel-tech\" value=\"redunderline\"> Red underline (<span class=\"redunderline\">cohse-link</span>)</br>");     
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"blueunderline\"> Blue underline (<span class=\"blueunderline\">cohse-link</span>)</br>");     
             }//else if
            else {
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"icon\"> Icon (cohse-link<img src=\"http://cohse.man.ac.uk/resources/info.gif\"/>)</br>");
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"overlay\"> Overlay (<span class=\"overlay\">cohse-link</span>)</br>");
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"greybox\"> Grey box (<span class=\"greybox-portlet\">cohse-link</span>)</br>");     
                sb.append("<input type=\"radio\" name=\"link-embel-tech\" value=\"redunderline\"> Red underline (<span class=\"redunderline\">cohse-link</span>)</br>");     
                sb.append("<input type=\"radio\" checked name=\"link-embel-tech\" value=\"blueunderline\"> Blue underline (<span class=\"blueunderline\">cohse-link</span>)</br>");
            }//else if
            
            sb.append("</div>");
            
            
            sb.append("<script type=\"text/javascript\" src=\""+resourceURL+"/resources/overlib.js\"");
            sb.append(" language=\"javascript1.2\"> </script>");
            //sb.append("<div id=\"overDiv\" style=\"position:absolute; visibility:hidden; z-index:1000;\"></div>");

            //Link box technique
            sb.append("<div style=\"padding:10px;\">");
            sb.append("<span style=\"font-weight:bold;\">");
            sb.append("Link Box Presentation Technique</span>");
            sb.append("<span style=\"font-size:10px;\"> (Move your mouse over the following labels to see a demo link box)</span>");
            sb.append("<br/>");
            
            /*if(linkBoxTech.equals("plain")){
                sb.append("<input type=\"radio\" checked name=\"link-box-tech\" value=\"plain\"> Group by links (plain)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_accordion\"> Group by links - expand/contract (plain accordion)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_keywords\"> Group by links - summaries (plain keywords)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested\"> Group by concepts (nested)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_accordion\"> Group by concepts - expand/contract (nested accordion)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_spotlight\"> Group by concepts - spotlight (nested spotlight)</br>");
            }//if
            else if(linkBoxTech.equals("plain_accordion")){
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain\"> Group by links (plain)</br>");
                sb.append("<input type=\"radio\" checked name=\"link-box-tech\" value=\"plain_accordion\"> Group by links - expand/contract (plain accordion)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_keywords\"> Group by links - summaries (plain keywords)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested\"> Group by concepts (nested)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_accordion\"> Group by concepts - expand/contract (nested accordion)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_spotlight\"> Group by concepts - spotlight (nested spotlight)</br>");
            }//if
            else if(linkBoxTech.equals("plain_keywords")){
                 sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain\"> Group by links (plain)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_accordion\"> Group by links - expand/contract (plain accordion)</br>");
                sb.append("<input type=\"radio\" checked name=\"link-box-tech\" value=\"plain_keywords\"> Group by links - summaries (plain keywords)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested\"> Group by concepts (nested)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_accordion\"> Group by concepts - expand/contract (nested accordion)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_spotlight\"> Group by concepts - spotlight (nested spotlight)</br>");
            }//if
            else if(linkBoxTech.equals("nested")){
               sb.append("<input type=\"radio\"  name=\"link-box-tech\" value=\"plain\"> Group by links (plain)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_accordion\"> Group by links - expand/contract (plain accordion)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_keywords\"> Group by links - summaries (plain keywords)</br>");
                sb.append("<input type=\"radio\" checked name=\"link-box-tech\" value=\"nested\"> Group by concepts (nested)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_accordion\"> Group by concepts - expand/contract (nested accordion)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_spotlight\"> Group by concepts - spotlight (nested spotlight)</br>");
             }//if
            else if(linkBoxTech.equals("nested_accordion")){
                 sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain\"> Group by links (plain)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_accordion\"> Group by links - expand/contract (plain accordion)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_keywords\"> Group by links - summaries (plain keywords)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested\"> Group by concepts (nested)</br>");
                sb.append("<input type=\"radio\" checked name=\"link-box-tech\" value=\"nested_accordion\"> Group by concepts - expand/contract (nested accordion)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_spotlight\"> Group by concepts - spotlight (nested spotlight)</br>");
            }//if
            else{
               sb.append("<input type=\"radio\"  name=\"link-box-tech\" value=\"plain\"> Group by links (plain)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_accordion\"> Group by links - expand/contract (plain accordion)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_keywords\"> Group by links - summaries (plain keywords)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested\"> Group by concepts (nested)</br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_accordion\"> Group by concepts - expand/contract (nested accordion)</br>");
                sb.append("<input type=\"radio\" checked name=\"link-box-tech\" value=\"nested_spotlight\"> Group by concepts - spotlight (nested spotlight)</br>");
             }//if*/
            
            if(linkBoxTech.equals("plain")){
                sb.append("<input type=\"radio\" checked name=\"link-box-tech\" value=\"plain\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain.gif', WIDTH, 369, HEIGHT, 240, ABOVE);\" onmouseout=\"return nd();\">Group by links (plain)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_accordion\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain-accordion.gif', WIDTH, 369, HEIGHT, 176, ABOVE);\" onmouseout=\"return nd();\">Group by links - expand/contract (plain accordion)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_keywords\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain-keywords.gif', WIDTH, 369, HEIGHT, 246, ABOVE);\" onmouseout=\"return nd();\">Group by links - summaries (plain keywords)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested.gif', WIDTH, 314, HEIGHT, 240, ABOVE);\" onmouseout=\"return nd();\">Group by concepts (nested)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_accordion\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested-accordion.gif', WIDTH, 283, HEIGHT, 175, ABOVE);\" onmouseout=\"return nd();\">Group by concepts - expand/contract (nested accordion)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_spotlight\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested-spotlight.gif', WIDTH, 283, HEIGHT, 260, ABOVE);\" onmouseout=\"return nd();\">Group by concepts - spotlight (nested spotlight)</span></br>");
          
            }//if
            else if(linkBoxTech.equals("plain_accordion")){
           sb.append("<input type=\"radio\"  name=\"link-box-tech\" value=\"plain\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain.gif', WIDTH, 369, HEIGHT, 240, ABOVE);\" onmouseout=\"return nd();\">Group by links (plain)</span></br>");
                sb.append("<input type=\"radio\" checked name=\"link-box-tech\" value=\"plain_accordion\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain-accordion.gif', WIDTH, 369, HEIGHT, 176, ABOVE);\" onmouseout=\"return nd();\">Group by links - expand/contract (plain accordion)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_keywords\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain-keywords.gif', WIDTH, 369, HEIGHT, 246, ABOVE);\" onmouseout=\"return nd();\">Group by links - summaries (plain keywords)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested.gif', WIDTH, 314, HEIGHT, 240, ABOVE);\" onmouseout=\"return nd();\">Group by concepts (nested)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_accordion\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested-accordion.gif', WIDTH, 283, HEIGHT, 175, ABOVE);\" onmouseout=\"return nd();\">Group by concepts - expand/contract (nested accordion)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_spotlight\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested-spotlight.gif', WIDTH, 283, HEIGHT, 260, ABOVE);\" onmouseout=\"return nd();\">Group by concepts - spotlight (nested spotlight)</span></br>");
          
            }//if
            else if(linkBoxTech.equals("plain_keywords")){
            sb.append("<input type=\"radio\"  name=\"link-box-tech\" value=\"plain\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain.gif', WIDTH, 369, HEIGHT, 240, ABOVE);\" onmouseout=\"return nd();\">Group by links (plain)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_accordion\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain-accordion.gif', WIDTH, 369, HEIGHT, 176, ABOVE);\" onmouseout=\"return nd();\">Group by links - expand/contract (plain accordion)</span></br>");
                sb.append("<input type=\"radio\" checked name=\"link-box-tech\" value=\"plain_keywords\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain-keywords.gif', WIDTH, 369, HEIGHT, 246, ABOVE);\" onmouseout=\"return nd();\">Group by links - summaries (plain keywords)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested.gif', WIDTH, 314, HEIGHT, 240, ABOVE);\" onmouseout=\"return nd();\">Group by concepts (nested)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_accordion\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested-accordion.gif', WIDTH, 283, HEIGHT, 175, ABOVE);\" onmouseout=\"return nd();\">Group by concepts - expand/contract (nested accordion)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_spotlight\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested-spotlight.gif', WIDTH, 283, HEIGHT, 260, ABOVE);\" onmouseout=\"return nd();\">Group by concepts - spotlight (nested spotlight)</span></br>");
          
             }//if
            else if(linkBoxTech.equals("nested")){
            sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain.gif', WIDTH, 369, HEIGHT, 240, ABOVE);\" onmouseout=\"return nd();\">Group by links (plain)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_accordion\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain-accordion.gif', WIDTH, 369, HEIGHT, 176, ABOVE);\" onmouseout=\"return nd();\">Group by links - expand/contract (plain accordion)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_keywords\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain-keywords.gif', WIDTH, 369, HEIGHT, 246, ABOVE);\" onmouseout=\"return nd();\">Group by links - summaries (plain keywords)</span></br>");
                sb.append("<input type=\"radio\" checked name=\"link-box-tech\" value=\"nested\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested.gif', WIDTH, 314, HEIGHT, 240, ABOVE);\" onmouseout=\"return nd();\">Group by concepts (nested)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_accordion\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested-accordion.gif', WIDTH, 283, HEIGHT, 175, ABOVE);\" onmouseout=\"return nd();\">Group by concepts - expand/contract (nested accordion)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_spotlight\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested-spotlight.gif', WIDTH, 283, HEIGHT, 260, ABOVE);\" onmouseout=\"return nd();\">Group by concepts - spotlight (nested spotlight)</span></br>");
          
            }//if
            else if(linkBoxTech.equals("nested_accordion")){
            sb.append("<input type=\"radio\"  name=\"link-box-tech\" value=\"plain\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain.gif', WIDTH, 369, HEIGHT, 240, ABOVE);\" onmouseout=\"return nd();\">Group by links (plain)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_accordion\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain-accordion.gif', WIDTH, 369, HEIGHT, 176, ABOVE);\" onmouseout=\"return nd();\">Group by links - expand/contract (plain accordion)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_keywords\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain-keywords.gif', WIDTH, 369, HEIGHT, 246, ABOVE);\" onmouseout=\"return nd();\">Group by links - summaries (plain keywords)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested.gif', WIDTH, 314, HEIGHT, 240, ABOVE);\" onmouseout=\"return nd();\">Group by concepts (nested)</span></br>");
                sb.append("<input type=\"radio\" checked name=\"link-box-tech\" value=\"nested_accordion\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested-accordion.gif', WIDTH, 283, HEIGHT, 175, ABOVE);\" onmouseout=\"return nd();\">Group by concepts - expand/contract (nested accordion)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_spotlight\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested-spotlight.gif', WIDTH, 283, HEIGHT, 260, ABOVE);\" onmouseout=\"return nd();\">Group by concepts - spotlight (nested spotlight)</span></br>");
          
            }//if
            else{
            sb.append("<input type=\"radio\"  name=\"link-box-tech\" value=\"plain\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain.gif', WIDTH, 369, HEIGHT, 240, ABOVE);\" onmouseout=\"return nd();\">Group by links (plain)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_accordion\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain-accordion.gif', WIDTH, 369, HEIGHT, 176, ABOVE);\" onmouseout=\"return nd();\">Group by links - expand/contract (plain accordion)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"plain_keywords\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/plain-keywords.gif', WIDTH, 369, HEIGHT, 246, ABOVE);\" onmouseout=\"return nd();\">Group by links - summaries (plain keywords)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested.gif', WIDTH, 314, HEIGHT, 240, ABOVE);\" onmouseout=\"return nd();\">Group by concepts (nested)</span></br>");
                sb.append("<input type=\"radio\" name=\"link-box-tech\" value=\"nested_accordion\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested-accordion.gif', WIDTH, 283, HEIGHT, 175, ABOVE);\" onmouseout=\"return nd();\">Group by concepts - expand/contract (nested accordion)</span></br>");
                sb.append("<input type=\"radio\" checked name=\"link-box-tech\" value=\"nested_spotlight\" >");
                sb.append("<span onmouseover=\"return overlib('',FGBACKGROUND, '"+this.resourceURL+"/resources/nested-spotlight.gif', WIDTH, 283, HEIGHT, 260, ABOVE);\" onmouseout=\"return nd();\">Group by concepts - spotlight (nested spotlight)</span></br>");
          
            }//if
            sb.append("</div>");
            sb.append("</div>");
            /***End Visualisation tab***/
            
            sb.append("<div style=\"padding:10px;\">");
            sb.append("<input style=\"margin-left:20px;\" type=\"submit\" name=\"save\" value=\"save-settings\">");
            sb.append("</div>");
            sb.append("</form>");
            sb.append("</div>");
            /***End Tab body**/
            
            //Display the preferences form
            response.getWriter().print(sb.toString());
        }//try
        catch (Exception e) {
            throw new PortletException(e);
        }//catch
    }//doEdit
    
    /**
     *This method is accessed when form items will be submitted.
     *@param request An ActionRequest object
     *@param response An ActionResponse object
     */
    public void processAction(ActionRequest request, ActionResponse response) throws PortletException, IOException {
        //Check to see if the process request is in EDIT mode
        if (request.getPortletMode().equals(PortletMode.EDIT)) {
            
            //Get the preferences objects
            PortletPreferences prefs = request.getPreferences();
            
            //Get the preferences values from the request
            ont = request.getParameter("ont");
            //We cannot save a null value so we need to make sure that the ontology URI is not null
            if(ont==null){
                ont="";
            }//if
            
            antSrv = request.getParameter("antSrv");
            ontSrv = request.getParameter("ontSrv");
            linkingType = request.getParameter("linking-type");
            linkEmbelTech = request.getParameter("link-embel-tech");
            linkBoxTech = request.getParameter("link-box-tech");            
            ASComp = request.getParameterValues("ASCompCheckbox");
            uniqueConcepts = request.getParameter("uniqueConcepts");
            sourceInfo = request.getParameter("sourceInfo");
            
            //Storing the default Annotation Service Component
            if(ASComp==null){
                ASComp = new String[] {"COHSEDB"};//new String[0];
            }
            
            //Storing default value
            if(uniqueConcepts == null){
                uniqueConcepts = dRole.getUniqueConcepts();
            }//if
            
            if(sourceInfo == null){
                sourceInfo = dRole.getSourceInfo();
            }
            
            String ontologies_update = request.getParameter("add_onts");
            String components_update = request.getParameter("get_comps");
            String load_ontology = request.getParameter("load_ont");
            
            //This is used to control the tab view of the preferences
            if(request.getParameter("tab")==null){
                tab_conf = "resourcesTab";
            }
            else{
                if(request.getParameter("tab").length()>2){
                    tab_conf=request.getParameter("tab");
                }
            }       
            
            if(ontologies_update!=null && ontologies_update.equals("true")){
                check_save = true;
            }//if get-ontologies button is pressed            
            else if(components_update!=null && components_update.equals("true")){
                check_save = true;
            }//if get-components button is pressed 
            else if(load_ontology!=null && load_ontology.equals("true")){
                check_save = true;
                KnowledgeServiceUtil osUtil = new KnowledgeServiceUtil(ontSrv,true);
                if(request.getParameter("load_ontology")==null){
                    message = "<br/>Error: you need to enter an ontology URL!";
                }
                else{
                    boolean success = osUtil.loadOntology(request.getParameter("load_ontology"));
                    if(success == true){
                        message= "<br/>Your ontology is loaded successfully, please check the ontology list above.";
                    }
                    else{
                        message = "<br/>Error: Your ontology could not be loaded!";
                    }
                }                
            }
            else{
                check_save = false;
                System.out.println("COHSE portlet now storing the given preferences...");
                
                //set the preferences
                prefs.setValue("ont", ont);
                prefs.setValue("antSrv", antSrv);
                prefs.setValue("ontSrv", ontSrv);
                prefs.setValue("linking-type", linkingType);
                prefs.setValue("link-embel-tech", linkEmbelTech);
                prefs.setValue("link-box-tech", linkBoxTech);                
                prefs.setValues("ASComp", ASComp);
                prefs.setValue("uniqueConcepts",uniqueConcepts);
                prefs.setValue("sourceInfo",sourceInfo);
                
                try{
                    //store the preferences
                    prefs.store();
                }//try
                catch (ValidatorException ex){
                    String errorMsg = ex.getMessage();
                    response.setRenderParameter("error", errorMsg);
                }//catch
                
                //These session objects are created when the portlet is viewed and here they are updated again, when they are saved
                PortletSession session = request.getPortletSession(true);
                session.setAttribute("ont",ont, PortletSession.APPLICATION_SCOPE);
                session.setAttribute("antSrv",antSrv, PortletSession.APPLICATION_SCOPE);
                session.setAttribute("ontSrv",ontSrv, PortletSession.APPLICATION_SCOPE);
                session.setAttribute("linkingType",linkingType,PortletSession.APPLICATION_SCOPE);
                session.setAttribute("linkEmbelTech",linkEmbelTech,PortletSession.APPLICATION_SCOPE);
                session.setAttribute("linkBoxTech",linkBoxTech,PortletSession.APPLICATION_SCOPE);                
                session.setAttribute("uniqueConcepts",uniqueConcepts,PortletSession.APPLICATION_SCOPE);
                session.setAttribute("sourceInfo",sourceInfo,PortletSession.APPLICATION_SCOPE);
                
                String ASCompSession = "";
                if(ASComp.length<1)
                    System.err.println("COHSE portlet processing preferences: No component is selected...");
                else{
                    for(int i=0;i<ASComp.length;i++){
                        if(i==ASComp.length-1)
                            ASCompSession+=ASComp[i];
                        else
                            ASCompSession+=ASComp[i]+",";
                    }//for
                }//else
                session.setAttribute("ASComp",ASCompSession,PortletSession.APPLICATION_SCOPE);
            }//if
        }//if
    }//processAction  
}//CohsePortlet
